#include <stdio.h>

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;  // Size of left subarray
    int n2 = right - mid;     // Size of right subarray

    // Create temporary arrays
    int Left[n1], Right[n2];

    // Copy data to temporary arrays
    for (int i = 0; i < n1; i++) {
        Left[i] = arr[left + i];
    }
    for (int j = 0; j < n2; j++) {
        Right[j] = arr[mid + 1 + j];
    }

    /* Merge the temporary arrays back into arr[left..right] */
    int i = 0, j = 0, k = left;
    while (i < n1 && j < n2) {
        if (Left[i] <= Right[j]) {
            arr[k] = Left[i];
            i++;
        } else {
            arr[k] = Right[j];
            j++;
        }
        k++;
    }

    /* Copy the remaining elements of Left[], if there are any */
    while (i < n1) {
        arr[k] = Left[i];
        i++;
        k++;
    }

    /* Copy the remaining elements of Right[], if there are any */
    while (j < n2) {
        arr[k] = Right[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        // Same as (left + right) / 2, but avoids overflow for large left and right
        int mid = left + (right - left) / 2;

        // Sort first and second halves
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        // Merge the sorted halves
        merge(arr, left, mid, right);
    }
}

int main() {
    printf("Name: Mahmadbnaim Kadivar\n");
    printf("Enrollment no.: 92310103056\n");

    int arr[100], n, i;

    printf("Enter the Length of Array:=> ");
    scanf("%d", &n);

    printf("Enter Elements of Array:\n");
    for (i = 0; i < n; i++) {
        printf("A[%d]= ", i);
        scanf("%d", &arr[i]);
    }

    mergeSort(arr, 0, n - 1);  // Sort the entire array

    printf("Sorted Array: ");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }

    printf("\n");
    return 0;
}
